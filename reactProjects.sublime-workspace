{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"toggle",
				"editToggle"
			],
			[
				"editi",
				"editing"
			],
			[
				"Add",
				"AddingIng"
			],
			[
				"stat",
				"state"
			],
			[
				"editing",
				"editingName"
			],
			[
				"ren",
				"renderAddRecipeForm"
			],
			[
				"hand",
				"handleAddIngUnit"
			],
			[
				"addRe",
				"addRecipe"
			],
			[
				"sty",
				"editRecipeStyleState"
			],
			[
				"new",
				"newRecipeName"
			],
			[
				"save",
				"saveEditedName"
			],
			[
				"inde",
				"index"
			],
			[
				"in",
				"indexToDel"
			],
			[
				"rem",
				"remRecipe"
			],
			[
				"remove",
				"removeRecipe"
			],
			[
				"re",
				"remRecipe"
			],
			[
				"Re",
				"Remove"
			],
			[
				"btn",
				"btn-danger"
			],
			[
				"del",
				"delAllIngredient"
			],
			[
				"reci",
				"recipes"
			],
			[
				"add",
				"addIng"
			],
			[
				"recip",
				"recipeUpdated"
			],
			[
				"rec",
				"recipes"
			],
			[
				"id",
				"idItem"
			],
			[
				"recipe",
				"recipeUpdated"
			],
			[
				"real",
				"realPerson"
			],
			[
				"over",
				"overflow"
			],
			[
				"each",
				"eachIngKey"
			],
			[
				"eac",
				"eachIng"
			],
			[
				"clSS",
				"className"
			],
			[
				"sa",
				"sayings"
			],
			[
				"wr",
				"writeWaitPct"
			],
			[
				"wai",
				"waitTime"
			],
			[
				"a",
				"answers"
			],
			[
				"std",
				"stdout"
			],
			[
				"margi",
				"margin-bottom"
			],
			[
				"marg",
				"margin-top"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"render",
				"renderBreak"
			],
			[
				"stae",
				"setState"
			],
			[
				"onC",
				"onClick"
			],
			[
				"oc",
				"onClick"
			],
			[
				"nav",
				"navbar"
			],
			[
				"chan",
				"changeYellow"
			],
			[
				"Note",
				"NoteWidth"
			],
			[
				"fixed-",
				"fixed-bottom"
			],
			[
				"comp",
				"componentDidUpdate"
			],
			[
				"mar",
				"margin"
			],
			[
				"body",
				"bodyHeight"
			],
			[
				"bor",
				"border"
			],
			[
				"class",
				"className"
			],
			[
				"onCha",
				"onColorChange"
			],
			[
				"change",
				"changeColor"
			],
			[
				"ra",
				"randomBetween"
			],
			[
				"ran",
				"randPosY"
			],
			[
				"next",
				"nextProps"
			],
			[
				"b",
				"backgroundColor"
			],
			[
				"chna",
				"changeColor"
			],
			[
				"C",
				"changeColor"
			],
			[
				"on",
				"onClick"
			],
			[
				"chane",
				"changeColor"
			],
			[
				"note",
				"noteStyle"
			],
			[
				"no",
				"note"
			],
			[
				"num",
				"numNotes"
			],
			[
				"notes",
				"notesUpdated"
			],
			[
				"text",
				"textContent"
			],
			[
				"LOAD",
				"loadProjects"
			],
			[
				"pro",
				"projectsNames"
			],
			[
				"proj",
				"projId"
			],
			[
				"bn",
				"btn-default"
			],
			[
				"wid",
				"width"
			],
			[
				"col",
				"col-md-offset-2"
			],
			[
				"is",
				"isGlobalOn"
			],
			[
				"padd",
				"padding-bottom"
			],
			[
				"toggl",
				"toggleClass"
			],
			[
				"cont",
				"contBts"
			],
			[
				"con",
				"contBts"
			],
			[
				"enab",
				"enableButtons"
			],
			[
				"en",
				"enableButtons"
			],
			[
				"disab",
				"disableButtons"
			],
			[
				"DE",
				"DELAY_VAL_RST"
			],
			[
				"set",
				"setInterval"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"margn",
				"margin-top"
			],
			[
				"equat",
				"equationFunc"
			],
			[
				"cal",
				"calcInp"
			],
			[
				"bac",
				"background-color"
			],
			[
				"eq",
				"equationFunc"
			],
			[
				"las",
				"lastChar"
			],
			[
				"main",
				"mainText"
			],
			[
				"te",
				"tempMainText"
			],
			[
				"min",
				"mainText"
			],
			[
				"winn",
				"winningPlayer"
			],
			[
				"get",
				"getPlayers"
			],
			[
				"P1",
				"P1Char"
			],
			[
				"p1",
				"P1Char"
			],
			[
				"glob",
				"globalTicTacVars"
			],
			[
				"gloa",
				"globalTicTacVars"
			],
			[
				"star",
				"startGame"
			],
			[
				"restart",
				"restartGlobal"
			],
			[
				"glo",
				"globalTicTacVars"
			],
			[
				"calc",
				"calcInput"
			],
			[
				"sub",
				"subText"
			],
			[
				"back",
				"background-color"
			],
			[
				"font",
				"font-style"
			],
			[
				"ci",
				"circleProg"
			],
			[
				"cil",
				"circleWorkProg"
			],
			[
				"di",
				"div\tTag"
			],
			[
				"time",
				"timeLabel"
			],
			[
				"aler",
				"alertPressed"
			],
			[
				"cold",
				"col-md-offset-2"
			],
			[
				"res",
				"reset"
			],
			[
				"glon",
				"globalSimonVars"
			],
			[
				"globa",
				"globalSimonVars"
			],
			[
				"pla",
				"playerStat"
			],
			[
				"AI",
				"AIstat"
			],
			[
				"player",
				"playerStat"
			],
			[
				"playe",
				"playerStat"
			],
			[
				"cur",
				"curWinCase"
			],
			[
				"cu",
				"curWinCase"
			],
			[
				"getWi",
				"getWinCases"
			],
			[
				"win",
				"winCases"
			],
			[
				"nu",
				"numPlayers"
			],
			[
				"fun",
				"function"
			],
			[
				"bt",
				"btnClass"
			],
			[
				"game",
				"gameDiv"
			]
		]
	},
	"buffers":
	[
		{
			"file": "recipeStore/index.html",
			"settings":
			{
				"buffer_size": 2291,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*Tanzim Mokammel\nmtanzim@gmail.com\nNov 2017\n*/\n\nclass RecipeApp extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\trecipes: [],\n\t\t\tnumRecipes:2,\n\t\t\tnewRecipeName: '',\n\t\t\tnewIng: {id:0, title:'', qty:0, unit:''},\n\t\t\tediting:false,\n\t\t\t//addRecipeStyleState: {display:'none'}\n\t\t};\n\n\t\tthis.eachRecipe = this.eachRecipe.bind(this);\n\t\tthis.addIngredient = this.addIngredient.bind(this);\n\t\tthis.delAllIngredient = this.delAllIngredient.bind(this);\n\t\tthis.delIngredient = this.delIngredient.bind(this);\n\t\tthis.addRecipe = this.addRecipe.bind(this);\n\t\tthis.remRecipe = this.remRecipe.bind(this);\n\t\tthis.removeAll = this.removeAll.bind(this);\n\t\tthis.handleAddRecipe = this.handleAddRecipe.bind(this);\n\t\tthis.handleAddIngTitle = this.handleAddIngTitle.bind(this);\n\t\tthis.handleAddIngQty = this.handleAddIngQty.bind(this);\n\t\tthis.handleAddIngUnit = this.handleAddIngUnit.bind(this);\n\t\tthis.editRecipName = this.editRecipName.bind(this);\n\t\tthis.toggleAddRecipe = this.toggleAddRecipe.bind(this);\n\t\t//this.renderAddRecipeForm = this.renderAddRecipeForm.bind(this);\n\n\n\t}\n\ttoggleAddRecipe() {\n\t\tthis.setState({\n\t\t\tediting:!this.state.editing\n\t\t});\n\t}\n\teditRecipName(id,newName) {\n\t\tconsole.log(newName+ ' for '+id);\n\t\tvar recipeUpdated = this.state.recipes.map(\n\t\t\trecipe => (recipe.id !== id) ?\n\t\t\t\trecipe :\n\t\t\t\t{...recipe,\n\t\t\t\t\ttitle:newName} \n\t\t);\n\t\tthis.setState({\n\t\t\trecipes:recipeUpdated\n\t\t});\n\n\t\t//console.log(this.state.recipes)\n\t}\n\n\taddRecipe() {\n\t\tvar updatedRecipe = this.state.recipes.concat([{id:(new Date).getTime(), title:this.state.newRecipeName, ing:[{}]}])\n\t\tthis.setState({\n\t\t\trecipes:updatedRecipe,\n\t\t\tnumRecipes: this.state.numRecipes+1,\n\t\t});\n\t\tthis.toggleAddRecipe();\n\t}\n\n\thandleAddIngTitle (event){\n\t\tthis.setState({\n\t \t\tnewIng:{...this.state.newIng,title:event.target.value}\n\t\t});\n\t}\n\thandleAddIngQty (event){\n\t\tthis.setState({\n\t \t\tnewIng:{...this.state.newIng,qty:event.target.value}\n\t\t});\n\t}\n\thandleAddIngUnit (event){\n\t\tthis.setState({\n\t \t\tnewIng:{...this.state.newIng,unit:event.target.value}\n\t\t});\n\t}\n\n\thandleAddRecipe (event) {\n\t\tthis.setState({\n\t \t\tnewRecipeName:event.target.value\n\t\t});\n\t}\n\n\tremRecipe(id) {\n\t\tvar indexToDel=-1;\n\t\tthis.state.recipes.forEach(function(recipe, index){\n\t\t\tif (recipe.id===id){\n\t\t\t\tindexToDel=index;\n\t\t\t}\n\t\t});\n\n\t\tconsole.log(`index to del is ${indexToDel}`);\n\n\t\tvar recipeUpdated = this.state.recipes;\n\t\tthis.state.recipes.splice(indexToDel,1);\n\t\t\n\t\tthis.setState({\n\t\t\trecipes:recipeUpdated\n\t\t});\n\n\t\tconsole.log(recipeUpdated);\n\t}\n\n\tremoveAll(){\n\t\tthis.setState({\n\t\t\trecipes:[],\n\t\t\tnumRecipes:0\n\t\t});\n\t} \n\n\taddIngredient(id) {\n\t\t//var newIng = [{id:(new Date).getTime(), name: this.state.newIng.title, qty: 2, unit: 'ml'}];\n\t\tvar newIng = {...this.state.newIng,id:(new Date).getTime()}\n\t\tconsole.log();\n\t\tvar recipeUpdated = this.state.recipes.map(function(recipe){\n\t\t\tif (recipe.id===id){\n\t\t\t\tvar addedIng=recipe.ing.concat(newIng);\n\t\t\t\treturn {...recipe,ing:addedIng};\n\t\t\t} else {\n\t\t\t\treturn recipe;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\trecipes:recipeUpdated\n\t\t});\n\n\t\tconsole.log(recipeUpdated);\n\t}\n\n\tdelIngredient(id, ingId) {\n\t\tvar recIndexToDel=-1;\n\t\tvar ingIndexToDel=-1;\n\t\tthis.state.recipes.forEach(function(recipe, index){\n\t\t\tif (recipe.id===id){\n\t\t\t\trecIndexToDel=index;\n\t\t\t\trecipe.ing.forEach(function(ing,ingIndex){\n\t\t\t\t\tif (ing.id===ingId){\n\t\t\t\t\t\tingIndexToDel=ingIndex;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar recipeUpdated = this.state.recipes;\n\t\tthis.state.recipes[recIndexToDel].ing.splice(ingIndexToDel,1);\n\t\tthis.setState({\n\t\t\trecipes:recipeUpdated\n\t\t});\n\n\t}\n\n\tdelAllIngredient(id) {\n\t\tvar recipeUpdated = this.state.recipes.map(function(recipe){\n\t\t\tif (recipe.id===id){\n\t\t\t\tvar emptyArr=[];\n\t\t\t\treturn {...recipe,ing:emptyArr};\n\t\t\t} else {\n\t\t\t\treturn recipe;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\trecipes:recipeUpdated\n\t\t});\n\n\t\tconsole.log(recipeUpdated);\n\n\n\t}\n\n\teachRecipe(recipe){\n\t\treturn (\n\t\t\t<RecipeCard\n\t\t\t\tkey={recipe.id}\n\t\t\t\tid={recipe.id}\n\t\t\t\ttitle={recipe.title}\n\t\t\t\tingredients={recipe.ing}\n\t\t\t\taddIng={this.addIngredient}\n\t\t\t\tremRecipe={this.remRecipe}\n\t\t\t\tdelAllIng={this.delAllIngredient}\n\t\t\t\tdelIng={this.delIngredient}\n\t\t\t\thandleIngTitle={this.handleAddIngTitle}\n\t\t\t\thandleIngQty={this.handleAddIngQty}\n\t\t\t\thandleIngUnit={this.handleAddIngUnit}\n\t\t\t\tsaveEdit = {this.editRecipName}\n\t\t\t></RecipeCard>\n\t\t);\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Recipe List</h1>\n\n\t\t\t\t<button type=\"button\" className=\"btn btn-default\" onClick={this.toggleAddRecipe}>Add Recipe</button>\n\t\t\t\t<button className=\"ml-2 btn btn-danger\" onClick={this.removeAll}>Delete All</button>\n\t\t\t\t{this.state.editing && (<div className=\"mt-4\">\n\t\t\t\t\t<AddRecipeForm onChange={this.handleAddRecipe} onSaveButton={this.addRecipe}/>\n\t\t\t\t</div>)}\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{this.state.recipes.map(this.eachRecipe)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\n\nclass RecipeCard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\teditingName:false,\n\t\t\tAddingIng:false,\n\t\t\teditedRecipeName:'',\n\t\t\t//editRecipeStyleState: {display:'none'},\n\t\t\t//addIngStyleState: {display:'none'}\n\t\t};\n\n\t\tthis.eachIng = this.eachIng.bind(this);\n\t\tthis.addIngredient = this.addIngredient.bind(this);\n\t\tthis.removeRecipe = this.removeRecipe.bind(this);\n\t\tthis.delAllIngredient = this.delAllIngredient.bind(this);\n\t\tthis.saveEditedName = this.saveEditedName.bind(this);\n\t\tthis.handleEditRecipeName = this.handleEditRecipeName.bind(this);\n\t\tthis.handleClickEditRecipe = this.handleClickEditRecipe.bind(this);\n\t\tthis.handleClickAddIng = this.handleClickAddIng.bind(this);\n\t}\n\n\teachIng(ing){\n\t\tif (Object.keys(ing).length !== 0){\n\t\t\treturn (\n\t\t\t\t<Ingredient ing={ing}\n\t\t\t\t\t\t\t\t\t  key={ing.id}\n\t\t\t\t\t\t\t\t\t  id={ing.id}\n\t\t\t\t\t\t\t\t\t  parentId={this.props.id}\n\t\t\t\t\t\t\t\t\t  delIng={this.props.delIng}\n\t\t\t\t\t\t\t\t\t  handleIngTitle={this.props.handleIngTitle} \n\t\t \t\t\t\t\t\t\t\thandleIngQty={this.props.handleIngQty}\n\t\t \t\t\t\t\t\t\t\thandleIngUnit={this.props.handleIngUnit}/>\n\t\t\t);\n\t\t}\n\t\t\n\t}\n\n\tremoveRecipe(){\n\t\tthis.props.remRecipe(this.props.id);\n\t}\n\n\taddIngredient () {\n\t\tthis.props.addIng(this.props.id);\n\t\tthis.handleClickAddIng();\n\t}\n\tdelAllIngredient () {\n\t\tthis.props.delAllIng(this.props.id);\n\t}\n\n\tsaveEditedName() {\n\t\t\tthis.props.saveEdit(this.props.id, this.state.editedRecipeName);\n\t\t\tthis.handleClickEditRecipe();\n\t}\n\thandleEditRecipeName (event) {\n\t\tthis.setState({\n\t \t\teditedRecipeName:event.target.value\n\t\t});\n\t}\n\n\thandleClickEditRecipe() {\n\t\tthis.setState({\n\t\t\teditingName:!this.state.editingName\n\t\t});\n\t}\n\n\thandleClickAddIng() {\n\t\tthis.setState({\n\t\t\tAddingIng:!this.state.AddingIng\n\t\t});\n\t}\n\n\trender () {\n\t\t//console.log(Object.keys(this.props.ingredients[0]));\n\t\treturn (\n\t\t\t<div className='col-12 col-sm-6'>\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\t\t<h3>{this.props.title}</h3>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<button className=\"ml-2 btn btn-default\" onClick={this.handleClickEditRecipe} >Edit</button>\n\t\t\t\t\t\t\t<button className=\"ml-2 btn btn-danger\" onClick={this.removeRecipe}>Remove</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t \t<div className=\"card-body\">\n\t\t\t\t \t\t{this.state.editingName && (<div id=\"editToggle\">\n\t\t\t\t\t\t\t<form >\n\t\t\t\t  \t\t\t\t<div className=\"form-row\">\n\t\t\t\t    \t\t\t\t<div className=\"form-group col\">\n\t\t\t\t      \t\t\t\t<input autoFocus onChange={this.handleEditRecipeName} type=\"text\" className=\"form-control\" id=\"recipeEdit\" placeholder=\"New Recipe Name\"></input>\n\t\t\t\t    \t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\n\t\t\t\t\t\t\t<button className=\"btn mb-4\" onClick={this.saveEditedName}>Save</button>\n\t\t\t\t\t\t</div>)}\n\t\t\t\t \t\t<button className=\"btn\" onClick={this.handleClickAddIng}>Add Ingredient</button>\n\t\t \t\t\t\t<button className=\"ml-2 btn btn-danger\" onClick={this.delAllIngredient}>Remove All</button>\n\t\t \t\t\t\t{this.state.AddingIng && (<div className=\"mt-2\">\n\t\t\t \t\t\t\t<AddIngForm handleIngTitle={this.props.handleIngTitle} \n\t\t\t\t\t \t\t\t\t\t\t\t\thandleIngQty={this.props.handleIngQty}\n\t\t\t\t\t \t\t\t\t\t\t\t\thandleIngUnit={this.props.handleIngUnit}/>\n\t\t\t\t\t\t\t<button onClick={this.addIngredient} className=\"btn\">Save</button>\n\t\t\t\t\t\t</div>)}\n\t\t\t \t\t\t<table className='mt-4' style={{width:'100%'}}>\n\t\t\t \t\t\t\t<thead>\n\t\t\t \t\t\t\t{/*}\n\t\t\t\t \t\t\t\t<tr>\n\t\t\t\t \t\t\t\t\t<th>Name</th>\n\t\t\t\t \t\t\t\t\t<th>Qty</th>\n\t\t\t\t \t\t\t\t\t<th>Units</th>\n\t\t\t\t \t\t\t\t\t<th>Action</th>\n\t\t\t\t \t\t\t\t\t<th>Remove</th>\n\t\t\t \t\t\t\t\t</tr>\n\t\t \t\t\t\t\t*/}\t\n\t\t \t\t\t\t\t</thead>\n\t\t \t\t\t\t\t<tbody>\n\t\t\t\t \t\t\t\t{this.props.ingredients.map(this.eachIng)}\n\t\t\t \t\t\t\t</tbody>\n\t\t \t\t\t\t</table>\n\t\t\t\t \t</div>\n\t\t\t\t </div>\n\t\t\t </div>\n\t\t);\n\t}\n}\n\nclass AddRecipeForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<form>\n\t\t\t  <div className=\"form-row\">\n\t\t\t    <div className=\"form-group col\">\n\t\t\t      <input autoFocus onChange={this.props.onChange} type=\"text\" className=\"form-control\" id=\"recipeName\" placeholder=\"Recipe Name\"></input>\n\t\t\t    \t<button type=\"button\" onClick={this.props.onSaveButton} className=\"btn mt-2\">Save</button>\n\t\t\t    </div>\n\t\t    </div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nclass AddIngForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender () {\n\t\treturn (\n\t\t\t<form>\n\t\t    <div className=\"form-row\">\n\t\t\t    <div className=\"form-group col-12\">\n\t\t\t      <input autoFocus onChange={this.props.handleIngTitle} type=\"text\" className=\"form-control\" id=\"ingName\" placeholder=\"Ingredient Name\"></input>\n\t\t\t    </div>\n\t\t\t    <div className=\"form-group col\">\n\t\t\t      <input onChange={this.props.handleIngQty} type=\"text\" className=\"form-control\" id=\"qty\" placeholder=\"Qty\"></input>\n\t\t\t    </div>\n\t\t\t    <div className=\"form-group col\">\n\t\t\t      <input onChange={this.props.handleIngUnit} type=\"text\"  className=\"form-control\" id=\"unit\" placeholder=\"Unit\"></input>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nclass Ingredient extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tediting:false\n\t\t};\n\t\tthis.deleteIngredient = this.deleteIngredient.bind(this);\n\t\tthis.handleClickEdit = this.handleClickEdit.bind(this);\n\t}\n\tdeleteIngredient() {\n\t\tthis.props.delIng(this.props.parentId, this.props.id);\n\t}\n\thandleClickEdit() {\n\t\tthis.setState({\n\t\t\tediting:!this.state.editing\n\t\t});\n\t}\n\trender () {\n\t\treturn (\n\t\t\t<span>\n\t\t\t{!this.state.editing ? (\n\t\t\t\t<tr>\n\t\t\t\t\t<td style={{width:'50%'}}>{this.props.ing.title}</td>\n\t\t\t\t\t<td style={{width:'10%'}}>{this.props.ing.qty}</td>\n\t\t\t\t\t<td style={{width:'10%'}}>{this.props.ing.unit}</td>\n\t\t\t\t\t<td style={{width:'15%'}}><button className=\"btn\" onClick={this.handleClickEdit}>Edit</button></td>\n\t\t\t\t\t<td style={{width:'15%'}}><button className=\"btn btn-danger\" onClick={this.deleteIngredient}>Remove</button></td>\n\t\t\t\t</tr>\t\n\t\t\t) : (\n\t\t\t\t<tr>\n\t\t\t\t\t<td style={{width:'50%'}}><input autoFocus onChange={this.props.handleIngTitle} type=\"text\" className=\"form-control\" placeholder={this.props.ing.title}></input></td>\n\t\t\t\t\t<td style={{width:'10%'}}><input onChange={this.props.handleIngQty} type=\"text\" className=\"form-control\"  placeholder={this.props.ing.qty}></input></td>\n\t\t\t\t\t<td style={{width:'10%'}}><input onChange={this.props.handleIngUnit} type=\"text\" className=\"form-control\"  placeholder={this.props.ing.unit}></input></td>\n\t\t\t\t\t<td style={{width:'15%'}}><button onClick={this.handleClickEdit} className=\"btn\">Save</button></td>\n\t\t\t\t\t<td style={{width:'15%'}}><button className=\"btn btn-danger\" onClick={this.deleteIngredient}>Remove</button></td>\n\t\t\t\t</tr>\n\t\t\t)}\n\t\t\t</span>\n\t\t\t\n\t\t);\n\t}\n}\n\n\nReactDOM.render(<RecipeApp/>, document.getElementById('react-container'));",
			"file": "recipeStore/RecipeApp.js",
			"file_size": 11940,
			"file_write_time": 131566224065495710,
			"settings":
			{
				"buffer_size": 11408,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "LyndaBulletin/App.js",
			"settings":
			{
				"buffer_size": 8459,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "LyndaBulletin/style.css",
			"settings":
			{
				"buffer_size": 1608,
				"line_ending": "Unix"
			}
		},
		{
			"file": "recipeStore/style.css",
			"settings":
			{
				"buffer_size": 134,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 236.0,
		"last_filter": "insta",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 164.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/xampp/htdocs/reactProjects",
		"/C/xampp/htdocs/reactProjects/LyndaBulletin",
		"/C/xampp/htdocs/reactProjects/recipeStore"
	],
	"file_history":
	[
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch05/05_03/start/Tanzim.md",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch05/05_03/start/create.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch05/05_03/start/promptPerson.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch03/03_01/start/global.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch03/03_02/start/app.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch03/03_03/start/ask.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch03/03_04/start/timers.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch04/04_01/start/core.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch04/04_03/start/BenFranklin.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch04/04_03/start/lib/person.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/NodeJSExercise/Ex_Files_Nodejs_EssT/Exercise Files/Ch04/04_03/finish/BenFranklin.js",
		"/C/xampp/htdocs/reactProjects/LyndaBulletin/style.css",
		"/C/xampp/htdocs/reactProjects/LyndaBulletin/App.js",
		"/C/xampp/htdocs/reactProjects/LyndaBulletin/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/common/footer.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/pomodoro/pomodoro.js",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/React Essentials/Ex_Files_ReactJS_Basics/Ex_Files_ReactJS_Basics/Ch05/05_01/finish/index.html",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/React Essentials/Ex_Files_ReactJS_Basics/Ex_Files_ReactJS_Basics/Ch05/05_02/finish/index.html",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/React Essentials/Ex_Files_ReactJS_Basics/Ex_Files_ReactJS_Basics/Ch05/05_08/finish/index.html",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/React Essentials/Ex_Files_ReactJS_Basics/Ex_Files_ReactJS_Basics/Ch04/04_06/finish/index.html",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/React Essentials/Ex_Files_ReactJS_Basics/Ex_Files_ReactJS_Basics/Ch04/04_07/finish/index.html",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/React Essentials/Ex_Files_ReactJS_Basics/Ex_Files_ReactJS_Basics/Ch04/04_05/finish/index.html",
		"/C/Users/PC/Documents/Lynda.com/Exercise Files/React Essentials/Ex_Files_ReactJS_Basics/Ex_Files_ReactJS_Basics/Ch04/04_04/finish/index.html",
		"/C/Users/PC/my-app/README.md",
		"/C/Users/PC/my-app/src/registerServiceWorker.js",
		"/C/Users/PC/my-app/src/index.js",
		"/C/Users/PC/my-app/src/App.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/calculator/style.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/common/footer.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/FrankOcean/style.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/common/footerBS3.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/scrolling.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/calculator/calculator.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/styleM.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/calculator/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/FrankOcean/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/localWeather/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/pomodoro/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/quoteGen/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/simon/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/tictactoe/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/twitchStatus/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/wikiView/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/extras/miscExercises/roman.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/extras/miscExercises/roman2.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/simon/style.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/localWeather/getWeather.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/simon/simon.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/MokaTek/indexM.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/localWeather/indexW.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/simon/simon.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/MokaTek/scrolling.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/localWeather/style.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/MokaTek/styleM.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/FrankOcean/index.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/calculator/calculator.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/pomodoro/pomodoro.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/calculator/calculator.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/tictactoe/tictactoe.js",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/calculator/style.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/pomodoro/style.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/tictactoe/style.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/pomodoro/pomodoro.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndAdvanced/tictactoe/tictactoe.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/common/footer.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/NikolaTeslaTest/style.css",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/NikolaTeslaTest/tesla.html",
		"/C/xampp/htdocs/freecodecamp/freecodecamp/frontEndIntmd/NikolaTeslaTest/tesla.html.txt",
		"/C/Users/PC/Documents/programming/miscProjects/checkBankStatements/README.MD",
		"/C/Users/PC/Documents/programming/miscProjects/checkBankStatements/checkBankStatements.py",
		"/C/Users/PC/Documents/programming/miscProjects/checkBankStatements/08.csv",
		"/C/Users/PC/Desktop/report.csv"
	],
	"find":
	{
		"height": 57.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ref",
			"style",
			"addIngStyleState",
			"editRecipeStyleState",
			"AddingIng",
			"AddingIngAddingIng",
			"AddingIng",
			"?",
			"addIngStyleState",
			"style",
			"\t\t\t\t\t</div>\t",
			"AddRecipeForm",
			"onColorChange"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "recipeStore/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2291,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "recipeStore/RecipeApp.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11408,
						"regions":
						{
						},
						"selection":
						[
							[
								11317,
								11317
							]
						],
						"settings":
						{
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7722.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "LyndaBulletin/App.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8459,
						"regions":
						{
						},
						"selection":
						[
							[
								5568,
								5568
							]
						],
						"settings":
						{
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5025.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "LyndaBulletin/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1608,
						"regions":
						{
						},
						"selection":
						[
							[
								1482,
								1482
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1254.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "recipeStore/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 134,
						"regions":
						{
						},
						"selection":
						[
							[
								88,
								88
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 44.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.919428571428,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "reactProjects.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 170.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
